Traceback (most recent call last):
  File "C:\Users\miaha\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\miaha\anaconda3\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\miaha\anaconda3\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## Heatmap for distribution of ethnicities in different boroughs
# Making subplots for each ethnicity
fig = make_subplots(rows=3, cols=2,
                    subplot_titles=list(Ethnicity_map.values()),
                    specs=[[{'type':"mapbox"}, {'type':"mapbox"}],[{'type':"mapbox"}, {'type':"mapbox"}],
                    [{'type':"mapbox", 'colspan':2}, None]],
                    horizontal_spacing= 0.05,
                    vertical_spacing=0.08) 
list_edu = list(Ethnicity_map.keys())
# Subplot of white
i = list_edu[0]
X_grouped = round(data_adult[data_adult['Ethnicity'] == i].groupby(['Boro']).count()/len(data_adult[data_adult['Ethnicity'] == i]),2)*100
X_grouped['BoroName'] = ['Bronx','Brooklyn','Manhattan','Queens','Staten Island']
X_grouped.set_index('BoroName',inplace=True)
att = 'Total_income'
label_text = 'Percentage of ' +  Ethnicity_map[i] + ':'
fig1 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
                        color_continuous_scale="Viridis",
                        range_color=(X_grouped[att].min(),X_grouped[att].max()),
                        mapbox_style="carto-positron",
                        zoom=8.5, center = {"lat": 40.730610, "lon": -73.935242},
                        opacity=0.5,
                        labels={att: label_text}
                        )
# Subplot of black
i = list_edu[1]
X_grouped = round(data_adult[data_adult['Ethnicity'] == i].groupby(['Boro']).count()/len(data_adult[data_adult['Ethnicity'] == i]),2)*100
X_grouped['BoroName'] = ['Bronx','Brooklyn','Manhattan','Queens','Staten Island']
X_grouped.set_index('BoroName',inplace=True)
att = 'Total_income'
label_text = 'Percentage of ' +  Ethnicity_map[i] + ':'
fig2 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
                        color_continuous_scale="Viridis",
                        range_color=(X_grouped[att].min(),X_grouped[att].max()),
                        mapbox_style="carto-positron",
                        zoom=8.5, center = {"lat": 40.730610, "lon": -73.935242},
                        opacity=0.5,
                        labels={att:label_text}
                        )
# Subplot of asian
i = list_edu[2]
X_grouped = round(data_adult[data_adult['Ethnicity'] == i].groupby(['Boro']).count()/len(data_adult[data_adult['Ethnicity'] == i]),2)*100
X_grouped['BoroName'] = ['Bronx','Brooklyn','Manhattan','Queens','Staten Island']
X_grouped.set_index('BoroName',inplace=True)
att = 'Total_income'
label_text = 'Percentage of ' +  Ethnicity_map[i] + ':'
fig3 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
                        color_continuous_scale="Viridis",
                        range_color=(X_grouped[att].min(),X_grouped[att].max()),
                        mapbox_style="carto-positron",
                        zoom=8.5, center = {"lat": 40.730610, "lon": -73.935242},
                        opacity=0.5,
                        labels={att:label_text}
                        )
# Subplot of hispanic
i = list_edu[3]
X_grouped = round(data_adult[data_adult['Ethnicity'] == i].groupby(['Boro']).count()/len(data_adult[data_adult['Ethnicity'] == i]),2)*100
X_grouped['BoroName'] = ['Bronx','Brooklyn','Manhattan','Queens','Staten Island']
X_grouped.set_index('BoroName',inplace=True)
att = 'Total_income'
label_text = 'Percentage of ' +  Ethnicity_map[i] + ':'
fig4 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
                        color_continuous_scale="Viridis",
                        range_color=(X_grouped[att].min(),X_grouped[att].max()),
                        mapbox_style="carto-positron",
                        zoom=8.5, center = {"lat": 40.730610, "lon": -73.935242},
                        opacity=0.5,
                        labels={att:label_text}
                        )
# Subplot of other
i = list_edu[4]
X_grouped = round(data_adult[data_adult['Ethnicity'] == i].groupby(['Boro']).count()/len(data_adult[data_adult['Ethnicity'] == i]),2)*100
X_grouped['BoroName'] = ['Bronx','Brooklyn','Manhattan','Queens','Staten Island']
X_grouped.set_index('BoroName',inplace=True)
att = 'Total_income'
label_text = 'Percentage of ' +  Ethnicity_map[i] + ':'
fig5 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
                        color_continuous_scale="Viridis",
                        range_color=(X_grouped[att].min(),X_grouped[att].max()),
                        mapbox_style="carto-positron",
                        zoom=8.5, center = {"lat": 40.730610, "lon": -73.935242},
                        opacity=0.5,
                        labels={att:label_text}
                        )
# Layout and show heatmap
fig.add_trace(fig1['data'][0], row=1, col=1)
fig.add_trace(fig2['data'][0], row=1, col=2)
fig.add_trace(fig3['data'][0], row=2, col=1)
fig.add_trace(fig4['data'][0], row=2, col=2)
fig.add_trace(fig5['data'][0], row=3, col=1)
fig.update_mapboxes(style='carto-positron',
                    zoom=7.5, center = {"lat": 40.730610, "lon": -73.935242})
fig.update_layout(autosize=False, width = 800, height=900, title_text='Percentage of ethnicities in boroughs', title_x=0.5)
fig.layout.coloraxis.colorbar.title = '%'
px_plot(fig, filename = 'Ethnicity_map.html')
display(HTML('Ethnicity_map.html'))
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_22060/2905569758.py[0m in [0;36m<module>[1;34m[0m
[0;32m     15[0m [0matt[0m [1;33m=[0m [1;34m'Total_income'[0m[1;33m[0m[1;33m[0m[0m
[0;32m     16[0m [0mlabel_text[0m [1;33m=[0m [1;34m'Percentage of '[0m [1;33m+[0m  [0mEthnicity_map[0m[1;33m[[0m[0mi[0m[1;33m][0m [1;33m+[0m [1;34m':'[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 17[1;33m fig1 = px.choropleth_mapbox(X_grouped[att].reset_index(), geojson=gdf['geometry'], locations=gdf.index, color='Total_income',
[0m[0;32m     18[0m                         [0mcolor_continuous_scale[0m[1;33m=[0m[1;34m"Viridis"[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m     19[0m                         [0mrange_color[0m[1;33m=[0m[1;33m([0m[0mX_grouped[0m[1;33m[[0m[0matt[0m[1;33m][0m[1;33m.[0m[0mmin[0m[1;33m([0m[1;33m)[0m[1;33m,[0m[0mX_grouped[0m[1;33m[[0m[0matt[0m[1;33m][0m[1;33m.[0m[0mmax[0m[1;33m([0m[1;33m)[0m[1;33m)[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;31mNameError[0m: name 'gdf' is not defined
NameError: name 'gdf' is not defined

